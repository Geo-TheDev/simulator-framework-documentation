"use strict";(self.webpackChunkframework_docs=self.webpackChunkframework_docs||[]).push([[648],{7757:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>r,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>a});var o=n(4848),s=n(8453);const i={sidebar_position:7,description:"Auto-Adjust frame size to fit content"},r="\ud83d\udd27 AdjustContentSize",l={id:"Client/GUI/AdjustContentSize",title:"\ud83d\udd27 AdjustContentSize",description:"Auto-Adjust frame size to fit content",source:"@site/docs/Client/GUI/AdjustContentSize.md",sourceDirName:"Client/GUI",slug:"/Client/GUI/AdjustContentSize",permalink:"/simulator-framework-documentation/docs/Client/GUI/AdjustContentSize",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Client/GUI/AdjustContentSize.md",tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7,description:"Auto-Adjust frame size to fit content"},sidebar:"tutorialSidebar",previous:{title:"\ud83c\udfae Controller",permalink:"/simulator-framework-documentation/docs/Client/GUI/Controller"},next:{title:"\ud83d\udcca Leaderboard",permalink:"/simulator-framework-documentation/docs/Client/GUI/Leaderboard"}},d={},a=[{value:"Overview",id:"overview",level:2},{value:"Constructor",id:"constructor",level:2},{value:"<code>AdjustContentSize.new(UIListLayout: UIListLayout, Background: Frame, ImgBlur: ImageLabel)</code>",id:"adjustcontentsizenewuilistlayout-uilistlayout-background-frame-imgblur-imagelabel",level:3},{value:"Methods",id:"methods",level:2},{value:"<code>AdjustContentSize:Init()</code>",id:"adjustcontentsizeinit",level:3},{value:"<code>AdjustContentSize:Destroy()</code>",id:"adjustcontentsizedestroy",level:3},{value:"Example Usage",id:"example-usage",level:2}];function c(e){const t={code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h1,{id:"-adjustcontentsize",children:"\ud83d\udd27 AdjustContentSize"}),"\n",(0,o.jsx)(t.h2,{id:"overview",children:"Overview"}),"\n",(0,o.jsxs)(t.p,{children:["The ",(0,o.jsx)(t.code,{children:"AdjustContentSize"})," class is designed to dynamically adjust the size of UI elements based on the content size of a UIListLayout. It utilizes the RunService to continuously update the size of specified UI elements."]}),"\n",(0,o.jsx)(t.h2,{id:"constructor",children:"Constructor"}),"\n",(0,o.jsx)(t.h3,{id:"adjustcontentsizenewuilistlayout-uilistlayout-background-frame-imgblur-imagelabel",children:(0,o.jsx)(t.code,{children:"AdjustContentSize.new(UIListLayout: UIListLayout, Background: Frame, ImgBlur: ImageLabel)"})}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:["Creates a new instance of the ",(0,o.jsx)(t.code,{children:"AdjustContentSize"})," class."]}),"\n",(0,o.jsxs)(t.li,{children:["Parameters:","\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.code,{children:"UIListLayout"}),": The UIListLayout whose content size will be monitored."]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.code,{children:"Background"}),": The Frame element whose size will be adjusted based on the content size."]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.code,{children:"ImgBlur"}),": The ImageLabel element whose size will be adjusted based on half of the content size."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(t.h2,{id:"methods",children:"Methods"}),"\n",(0,o.jsx)(t.h3,{id:"adjustcontentsizeinit",children:(0,o.jsx)(t.code,{children:"AdjustContentSize:Init()"})}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:["Initializes the ",(0,o.jsx)(t.code,{children:"AdjustContentSize"})," instance by connecting to the RunService's Heartbeat event."]}),"\n",(0,o.jsxs)(t.li,{children:["Updates the size of ",(0,o.jsx)(t.code,{children:"Background"})," and ",(0,o.jsx)(t.code,{children:"ImgBlur"})," based on the content size of the specified ",(0,o.jsx)(t.code,{children:"UIListLayout"}),"."]}),"\n"]}),"\n",(0,o.jsx)(t.h3,{id:"adjustcontentsizedestroy",children:(0,o.jsx)(t.code,{children:"AdjustContentSize:Destroy()"})}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsx)(t.li,{children:"Disconnects the connection to the Heartbeat event, stopping the continuous updates of element sizes."}),"\n"]}),"\n",(0,o.jsx)(t.h2,{id:"example-usage",children:"Example Usage"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-lua",children:"-- Example Usage:\r\nlocal Framework = require(path.to.framework).GetClient()\r\nlocal GUI = Framework.GUI\r\nlocal AdjustContentSize = GUI.AdjustContentSize\r\n\r\nlocal myListLayout = -- get or create your UIListLayout\r\nlocal myBackground = -- get or create your Frame element\r\nlocal myImgBlur = -- get or create your ImageLabel element\r\n\r\nlocal adjuster = AdjustContentSize.new(myListLayout, myBackground, myImgBlur)\r\n\r\n-- Optionally, you can call adjuster:Destroy() to stop updates and disconnect from the Heartbeat event.\n"})})]})}function u(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>l});var o=n(6540);const s={},i=o.createContext(s);function r(e){const t=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),o.createElement(i.Provider,{value:t},e.children)}}}]);