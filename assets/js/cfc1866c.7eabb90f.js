"use strict";(self.webpackChunkframework_docs=self.webpackChunkframework_docs||[]).push([[5451],{6945:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>c,contentTitle:()=>t,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>d});var l=n(4848),i=n(8453);const a={sidebar_position:5,description:"Manager for currencies."},t="\ud83d\udcb5 Currency",s={id:"Server/Currency",title:"\ud83d\udcb5 Currency",description:"Manager for currencies.",source:"@site/docs/Server/Currency.md",sourceDirName:"Server",slug:"/Server/Currency",permalink:"/simulator-framework-documentation/docs/Server/Currency",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Server/Currency.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5,description:"Manager for currencies."},sidebar:"tutorialSidebar",previous:{title:"\ud83d\udcac Commands",permalink:"/simulator-framework-documentation/docs/Server/Commands"},next:{title:"\ud83d\udc96Favourite Chest",permalink:"/simulator-framework-documentation/docs/Server/FavouriteChest"}},c={},d=[{value:"Creating a currency",id:"creating-a-currency",level:2},{value:"Modifying a currency",id:"modifying-a-currency",level:2},{value:"BindToUpdate",id:"bindtoupdate",level:3},{value:"GetMultipliers",id:"getmultipliers",level:3},{value:"Encode",id:"encode",level:3},{value:"GetValue",id:"getvalue",level:3},{value:"CanAfford",id:"canafford",level:3},{value:"AttemptPurchase",id:"attemptpurchase",level:3},{value:"GetStored",id:"getstored",level:3},{value:"GetRealAmount",id:"getrealamount",level:3},{value:"Set",id:"set",level:3},{value:"Multiply",id:"multiply",level:3},{value:"Divide",id:"divide",level:3},{value:"Add",id:"add",level:3},{value:"Subtract",id:"subtract",level:3},{value:"Raise",id:"raise",level:3}];function o(e){const r={admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(r.h1,{id:"-currency",children:"\ud83d\udcb5 Currency"}),"\n",(0,l.jsx)(r.p,{children:"This module is one of the most useful modules in the entire framework."}),"\n",(0,l.jsx)(r.p,{children:"It allows you to create and modify currency."}),"\n",(0,l.jsx)(r.h2,{id:"creating-a-currency",children:"Creating a currency"}),"\n",(0,l.jsx)(r.p,{children:"To create a currency, require the framework and do the following:"}),"\n",(0,l.jsx)(r.pre,{children:(0,l.jsx)(r.code,{className:"language-lua",children:'local Framework = require(path.to.framework).GetServer()\r\nlocal Currency = Framework.Currency\r\n\r\nCurrency.Create("Wins", "rbxassetid://14647075582", Color3.new(1, 0.73, 0))\n'})}),"\n",(0,l.jsx)(r.p,{children:"There are a couple rules when creating currency:"}),"\n",(0,l.jsxs)(r.ul,{children:["\n",(0,l.jsxs)(r.li,{children:["The name is ",(0,l.jsx)(r.strong,{children:"required"})]}),"\n",(0,l.jsxs)(r.li,{children:["If you do not specify an image, it won't create ",(0,l.jsx)(r.strong,{children:"any"})," UI"]}),"\n",(0,l.jsx)(r.li,{children:"If you do not specify a colour, it will be created on the sidebar below the menu buttons."}),"\n"]}),"\n",(0,l.jsxs)(r.p,{children:["When you have finished creating your currencies, you ",(0,l.jsx)(r.strong,{children:"MUST"})," use the Finalsie method, otherwise it will not create the currencies"]}),"\n",(0,l.jsx)(r.pre,{children:(0,l.jsx)(r.code,{className:"language-lua",children:"Currency.Finalise()\n"})}),"\n",(0,l.jsx)(r.admonition,{type:"danger",children:(0,l.jsx)(r.p,{children:"Do not use the BEFORE you finish creating all the currency, its common sense come on i don't gotta explain why."})}),"\n",(0,l.jsx)(r.h2,{id:"modifying-a-currency",children:"Modifying a currency"}),"\n",(0,l.jsx)(r.p,{children:"To modify a currency, you first need to get the currency:"}),"\n",(0,l.jsx)(r.pre,{children:(0,l.jsx)(r.code,{className:"language-lua",children:"-- assuming you already have the player defined as 'player'\r\n\r\nlocal Framework = require(path.to.framework).GetServer()\r\nlocal Currency = Framework.Currency\r\n\r\nlocal playerCurrency = Currency.Get(player, currencyName)\n"})}),"\n",(0,l.jsx)(r.h3,{id:"bindtoupdate",children:"BindToUpdate"}),"\n",(0,l.jsx)(r.admonition,{type:"warning",children:(0,l.jsx)(r.p,{children:"This can only be used on server side scripts / modules"})}),"\n",(0,l.jsx)(r.p,{children:"BindToUpdate fires a BindableEvent once the currency has been updated."}),"\n",(0,l.jsx)(r.pre,{children:(0,l.jsx)(r.code,{className:"language-lua",children:"playerCurrency:BindToUpdate(function()\r\n    -- do things here, like grabbing new values.\r\nend)\n"})}),"\n",(0,l.jsx)(r.h3,{id:"getmultipliers",children:"GetMultipliers"}),"\n",(0,l.jsx)(r.p,{children:"This returns the multipliers that have been applied to the currency such as:"}),"\n",(0,l.jsxs)(r.ul,{children:["\n",(0,l.jsx)(r.li,{children:"Pets"}),"\n",(0,l.jsx)(r.li,{children:"Trails"}),"\n",(0,l.jsx)(r.li,{children:"Potions"}),"\n",(0,l.jsx)(r.li,{children:"Friend Boost"}),"\n"]}),"\n",(0,l.jsx)(r.pre,{children:(0,l.jsx)(r.code,{className:"language-lua",children:"local multipliers = playerCurrency:GetMultipliers()\r\nprint(multipliers) -- e.g. 5\n"})}),"\n",(0,l.jsx)(r.h3,{id:"encode",children:"Encode"}),"\n",(0,l.jsx)(r.p,{children:"Bignum dictionary -> readable string"}),"\n",(0,l.jsx)(r.pre,{children:(0,l.jsx)(r.code,{className:"language-lua",children:"local encoded = playerCurrency:Encode()\n"})}),"\n",(0,l.jsx)(r.h3,{id:"getvalue",children:"GetValue"}),"\n",(0,l.jsx)(r.p,{children:"Returns the stored bignum"}),"\n",(0,l.jsx)(r.pre,{children:(0,l.jsx)(r.code,{className:"language-lua",children:"local Bignum = playerCurrency:GetValue()\n"})}),"\n",(0,l.jsx)(r.h3,{id:"canafford",children:"CanAfford"}),"\n",(0,l.jsx)(r.p,{children:"This method returns a boolean which tells you whether a player can afford something."}),"\n",(0,l.jsxs)(r.p,{children:["This does ",(0,l.jsx)(r.strong,{children:"NOT"})," remove currency"]}),"\n",(0,l.jsx)(r.pre,{children:(0,l.jsx)(r.code,{className:"language-lua",children:'local canAfford = playerCurrency:CanAfford(500)\r\n\r\nif canAfford then\r\n    print("Can afford")\r\nelse\r\n    print("Can\'t afford")\r\nend\n'})}),"\n",(0,l.jsx)(r.h3,{id:"attemptpurchase",children:"AttemptPurchase"}),"\n",(0,l.jsxs)(r.p,{children:["Like CanAfford, this returns a boolean if the player can afford something, however, this one ",(0,l.jsx)(r.strong,{children:"DOES"})," remove currency."]}),"\n",(0,l.jsx)(r.p,{children:"This acts like a shop system, for example, when a player clicks to buy something, you can check whether it goes through or not."}),"\n",(0,l.jsx)(r.pre,{children:(0,l.jsx)(r.code,{className:"language-lua",children:'local hasPurchased = playerCurrency:AttemptPurchase(500)\r\n\r\nif hasPurchased then\r\n    print("Has Purchased")\r\nelse\r\n    print("Hasn\'t Purchased")\r\nend\n'})}),"\n",(0,l.jsx)(r.h3,{id:"getstored",children:"GetStored"}),"\n",(0,l.jsx)(r.p,{children:"Returns the stored value of the currency"}),"\n",(0,l.jsx)(r.pre,{children:(0,l.jsx)(r.code,{className:"language-lua",children:"print(playerCurrency:GetStored())\n"})}),"\n",(0,l.jsx)(r.h3,{id:"getrealamount",children:"GetRealAmount"}),"\n",(0,l.jsx)(r.p,{children:"Difficult to explain, but this method gives you a number when all multipliers have been applied."}),"\n",(0,l.jsx)(r.pre,{children:(0,l.jsx)(r.code,{className:"language-lua",children:"local number = 10\r\nlocal numberWithMultipliers = playerCurrency:GetRealAmount(number)\n"})}),"\n",(0,l.jsx)(r.h3,{id:"set",children:"Set"}),"\n",(0,l.jsx)(r.p,{children:"This sets the currency to a number, multipliers are not applied."}),"\n",(0,l.jsx)(r.pre,{children:(0,l.jsx)(r.code,{className:"language-lua",children:"playerCurrency:Set(100)\n"})}),"\n",(0,l.jsx)(r.h3,{id:"multiply",children:"Multiply"}),"\n",(0,l.jsx)(r.p,{children:"This multiplies the current stored data."}),"\n",(0,l.jsx)(r.pre,{children:(0,l.jsx)(r.code,{className:"language-lua",children:"playerCurrency:Multiply(10) -- 10x\n"})}),"\n",(0,l.jsx)(r.h3,{id:"divide",children:"Divide"}),"\n",(0,l.jsx)(r.p,{children:"Does the opposite of multiply"}),"\n",(0,l.jsx)(r.pre,{children:(0,l.jsx)(r.code,{className:"language-lua",children:"playerCurrency:Divide(10) -- / 10\n"})}),"\n",(0,l.jsx)(r.h3,{id:"add",children:"Add"}),"\n",(0,l.jsx)(r.p,{children:"Adds an amount to the currency"}),"\n",(0,l.jsx)(r.p,{children:"You can specify whether you apply multipliers or not, but bare in mind, not specifying automatically denies the use of multipliers."}),"\n",(0,l.jsx)(r.pre,{children:(0,l.jsx)(r.code,{className:"language-lua",children:"playerCurrency:Add(10) -- no multipliers\r\nplayerCurrency:Add(10, false) -- no multipliers\r\nplayerCurrency:Add(10, true) -- multipliers\n"})}),"\n",(0,l.jsx)(r.h3,{id:"subtract",children:"Subtract"}),"\n",(0,l.jsx)(r.p,{children:"Subtracts an amount from the currency, multipliers are not used in this method at all."}),"\n",(0,l.jsx)(r.pre,{children:(0,l.jsx)(r.code,{className:"language-lua",children:"playerCurrency:Subtract(100)\n"})}),"\n",(0,l.jsx)(r.h3,{id:"raise",children:"Raise"}),"\n",(0,l.jsx)(r.p,{children:"Exponentiates the amount with the supplied exponent"}),"\n",(0,l.jsx)(r.pre,{children:(0,l.jsx)(r.code,{className:"language-lua",children:"playerCurrency:Raise(10) -- amount ^= 10\n"})})]})}function u(e={}){const{wrapper:r}={...(0,i.R)(),...e.components};return r?(0,l.jsx)(r,{...e,children:(0,l.jsx)(o,{...e})}):o(e)}},8453:(e,r,n)=>{n.d(r,{R:()=>t,x:()=>s});var l=n(6540);const i={},a=l.createContext(i);function t(e){const r=l.useContext(a);return l.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function s(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),l.createElement(a.Provider,{value:r},e.children)}}}]);